Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml
deleted file mode 100644
--- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
+++ /dev/null	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: org.junit.jupiter:junit-jupiter-params:5.9.2">
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml
deleted file mode 100644
--- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
+++ /dev/null	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: org.junit.jupiter:junit-jupiter:5.9.2">
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/SUDProjekt.iml
===================================================================
diff --git a/.idea/SUDProjekt.iml b/.idea/SUDProjekt.iml
deleted file mode 100644
--- a/.idea/SUDProjekt.iml	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
+++ /dev/null	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_17">
-    <output url="file://$MODULE_DIR$/target/classes" />
-    <output-test url="file://$MODULE_DIR$/target/test-classes" />
-    <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
-      <excludeFolder url="file://$MODULE_DIR$/target" />
-    </content>
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" name="Maven: junit:junit:4.13.2" level="project" />
-    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest-core:1.3" level="project" />
-    <orderEntry type="library" name="Maven: org.junit.jupiter:junit-jupiter:5.9.2" level="project" />
-    <orderEntry type="library" name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.2" level="project" />
-    <orderEntry type="library" name="Maven: org.opentest4j:opentest4j:1.2.0" level="project" />
-    <orderEntry type="library" name="Maven: org.junit.platform:junit-platform-commons:1.9.2" level="project" />
-    <orderEntry type="library" name="Maven: org.apiguardian:apiguardian-api:1.1.2" level="project" />
-    <orderEntry type="library" name="Maven: org.junit.jupiter:junit-jupiter-params:5.9.2" level="project" />
-    <orderEntry type="library" scope="RUNTIME" name="Maven: org.junit.jupiter:junit-jupiter-engine:5.9.2" level="project" />
-    <orderEntry type="library" scope="RUNTIME" name="Maven: org.junit.platform:junit-platform-engine:1.9.2" level="project" />
-  </component>
-</module>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml
deleted file mode 100644
--- a/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
+++ /dev/null	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: org.junit.platform:junit-platform-engine:1.9.2">
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml b/.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml
deleted file mode 100644
--- a/.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
+++ /dev/null	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: org.hamcrest:hamcrest-core:1.3">
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Maven__junit_junit_4_13_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__junit_junit_4_13_2.xml b/.idea/libraries/Maven__junit_junit_4_13_2.xml
deleted file mode 100644
--- a/.idea/libraries/Maven__junit_junit_4_13_2.xml	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
+++ /dev/null	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: junit:junit:4.13.2">
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.2/junit-4.13.2.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.2/junit-4.13.2-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.2/junit-4.13.2-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml
deleted file mode 100644
--- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
+++ /dev/null	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.2">
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml
deleted file mode 100644
--- a/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
+++ /dev/null	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: org.junit.platform:junit-platform-commons:1.9.2">
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml b/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml
deleted file mode 100644
--- a/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
+++ /dev/null	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: org.opentest4j:opentest4j:1.2.0">
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml b/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml
deleted file mode 100644
--- a/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
+++ /dev/null	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: org.apiguardian:apiguardian-api:1.1.2">
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml
deleted file mode 100644
--- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
+++ /dev/null	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: org.junit.jupiter:junit-jupiter-engine:5.9.2">
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/modules.xml
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
deleted file mode 100644
--- a/.idea/modules.xml	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
+++ /dev/null	(revision 45b9cb8b3dfae6b3187e0b8f6841b38298525beb)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/SUDProjekt.iml" filepath="$PROJECT_DIR$/.idea/SUDProjekt.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1677232194859)
+++ b/.idea/.gitignore	(date 1677232194859)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1677232194912)
+++ b/.idea/uiDesigner.xml	(date 1677232194912)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/codeStyles/codeStyleConfig.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/codeStyles/codeStyleConfig.xml b/.idea/codeStyles/codeStyleConfig.xml
new file mode 100644
--- /dev/null	(date 1677232194887)
+++ b/.idea/codeStyles/codeStyleConfig.xml	(date 1677232194887)
@@ -0,0 +1,5 @@
+<component name="ProjectCodeStyleConfiguration">
+  <state>
+    <option name="PREFERRED_PROJECT_CODE_STYLE" value="Default" />
+  </state>
+</component>
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
--- /dev/null	(date 1677232194899)
+++ b/.idea/encodings.xml	(date 1677232194899)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/codeStyles/Project.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/codeStyles/Project.xml b/.idea/codeStyles/Project.xml
new file mode 100644
--- /dev/null	(date 1677232194874)
+++ b/.idea/codeStyles/Project.xml	(date 1677232194874)
@@ -0,0 +1,7 @@
+<component name="ProjectCodeStyleConfiguration">
+  <code_scheme name="Project" version="173">
+    <ScalaCodeStyleSettings>
+      <option name="MULTILINE_STRING_CLOSING_QUOTES_ON_NEW_LINE" value="true" />
+    </ScalaCodeStyleSettings>
+  </code_scheme>
+</component>
\ No newline at end of file
Index: src/main/java/equipment/weapon/Sword.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/equipment/weapon/Sword.java b/src/main/java/equipment/weapon/Sword.java
new file mode 100644
--- /dev/null	(date 1677232195440)
+++ b/src/main/java/equipment/weapon/Sword.java	(date 1677232195440)
@@ -0,0 +1,35 @@
+package equipment.weapon;
+
+import util.Attribute;
+
+public class Sword extends Weapon{
+
+    public Sword() {
+        super(Attribute.STRENGTH,15,3,13,8,false,1,false);
+    }
+
+    @Override
+    protected void draw() {
+
+    }
+
+    @Override
+    protected void prepare() {
+
+    }
+
+    @Override
+    protected void aim() {
+
+    }
+
+    @Override
+    protected void strike() {
+
+    }
+
+    @Override
+    protected void holster() {
+
+    }
+}
Index: src/main/java/equipment/weapon/Rapier.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/equipment/weapon/Rapier.java b/src/main/java/equipment/weapon/Rapier.java
new file mode 100644
--- /dev/null	(date 1677232195426)
+++ b/src/main/java/equipment/weapon/Rapier.java	(date 1677232195426)
@@ -0,0 +1,35 @@
+package equipment.weapon;
+
+import util.Attribute;
+
+public class Rapier extends Weapon {
+
+    public Rapier() {
+        super(Attribute.DEXTERITY,25,2,0,8,false,1,false);
+    }
+
+    @Override
+    protected void draw() {
+
+    }
+
+    @Override
+    protected void prepare() {
+
+    }
+
+    @Override
+    protected void aim() {
+
+    }
+
+    @Override
+    protected void strike() {
+
+    }
+
+    @Override
+    protected void holster() {
+
+    }
+}
Index: src/main/java/equipment/weapon/Bow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/equipment/weapon/Bow.java b/src/main/java/equipment/weapon/Bow.java
new file mode 100644
--- /dev/null	(date 1677232195377)
+++ b/src/main/java/equipment/weapon/Bow.java	(date 1677232195377)
@@ -0,0 +1,37 @@
+package equipment.weapon;
+
+import util.Attribute;
+
+public class Bow extends RangeWeapon {
+
+
+    public Bow(Attribute attribute, float price, float weigth, int requiredStrength, int damage, boolean multiAttackAllowed, float range, boolean isThrowable, int ammo) {
+        super(Attribute.DEXTERITY, 15, 2, 13, 8, false, 6, false);
+        this.setAmmo(20);
+    }
+
+    @Override
+    protected void draw() {
+        super.draw();
+    }
+
+    @Override
+    protected void prepare() {
+        super.prepare();
+    }
+
+    @Override
+    protected void aim() {
+        super.aim();
+    }
+
+    @Override
+    protected void strike() {
+        super.strike();
+    }
+
+    @Override
+    protected void holster() {
+        super.holster();
+    }
+}
Index: src/main/java/equipment/weapon/Spear.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/equipment/weapon/Spear.java b/src/main/java/equipment/weapon/Spear.java
new file mode 100644
--- /dev/null	(date 1677232195429)
+++ b/src/main/java/equipment/weapon/Spear.java	(date 1677232195429)
@@ -0,0 +1,35 @@
+package equipment.weapon;
+
+import util.Attribute;
+
+public class Spear extends Weapon {
+
+    public Spear() {
+        super(Attribute.NOATTRIBUTE,2,3,0,6,false,2,false);
+    }
+
+    @Override
+    protected void draw() {
+
+    }
+
+    @Override
+    protected void prepare() {
+
+    }
+
+    @Override
+    protected void aim() {
+
+    }
+
+    @Override
+    protected void strike() {
+
+    }
+
+    @Override
+    protected void holster() {
+
+    }
+}
Index: src/main/java/equipment/weapon/Dart.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/equipment/weapon/Dart.java b/src/main/java/equipment/weapon/Dart.java
new file mode 100644
--- /dev/null	(date 1677232195396)
+++ b/src/main/java/equipment/weapon/Dart.java	(date 1677232195396)
@@ -0,0 +1,37 @@
+package equipment.weapon;
+
+import util.Attribute;
+
+public class Dart extends RangeWeapon{
+
+
+    public Dart() {
+        super(Attribute.DEXTERITY, 0.1F, 0.25F, 0, 4, false, 2, false);
+        this.setAmmo(20);
+    }
+
+    @Override
+    protected void draw() {
+        super.draw();
+    }
+
+    @Override
+    protected void prepare() {
+        super.prepare();
+    }
+
+    @Override
+    protected void aim() {
+        super.aim();
+    }
+
+    @Override
+    protected void strike() {
+        super.strike();
+    }
+
+    @Override
+    protected void holster() {
+        super.holster();
+    }
+}
Index: src/main/java/equipment/weapon/HandAxe.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/equipment/weapon/HandAxe.java b/src/main/java/equipment/weapon/HandAxe.java
new file mode 100644
--- /dev/null	(date 1677232195408)
+++ b/src/main/java/equipment/weapon/HandAxe.java	(date 1677232195408)
@@ -0,0 +1,35 @@
+package equipment.weapon;
+
+import util.Attribute;
+
+public class HandAxe extends Weapon {
+
+    public HandAxe() {
+        //TODO Damage
+        super(Attribute.NOATTRIBUTE,5,2,0,6,true,2,true);
+    }
+    @Override
+    protected void draw() {
+
+    }
+
+    @Override
+    protected void prepare() {
+
+    }
+
+    @Override
+    protected void aim() {
+
+    }
+
+    @Override
+    protected void strike() {
+
+    }
+
+    @Override
+    protected void holster() {
+
+    }
+}
Index: src/main/java/equipment/weapon/BattleAxe.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/equipment/weapon/BattleAxe.java b/src/main/java/equipment/weapon/BattleAxe.java
new file mode 100644
--- /dev/null	(date 1677232195362)
+++ b/src/main/java/equipment/weapon/BattleAxe.java	(date 1677232195362)
@@ -0,0 +1,36 @@
+package equipment.weapon;
+
+import util.Attribute;
+
+public class BattleAxe extends Weapon{
+
+    public BattleAxe() {
+        //TODO damage
+        super(Attribute.STRENGTH,10,4,0,6,false,1,false);
+    }
+
+    @Override
+    protected void draw() {
+
+    }
+
+    @Override
+    protected void prepare() {
+
+    }
+
+    @Override
+    protected void aim() {
+
+    }
+
+    @Override
+    protected void strike() {
+
+    }
+
+    @Override
+    protected void holster() {
+
+    }
+}
Index: src/main/java/equipment/weapon/Dagger.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/equipment/weapon/Dagger.java b/src/main/java/equipment/weapon/Dagger.java
new file mode 100644
--- /dev/null	(date 1677232195381)
+++ b/src/main/java/equipment/weapon/Dagger.java	(date 1677232195381)
@@ -0,0 +1,30 @@
+package equipment.weapon;
+
+import util.Attribute;
+
+public class Dagger extends Weapon{
+
+    public Dagger() {
+        //TODO Würfel später hinzufügen bzw damage
+        super(Attribute.DEXTERITY,2,1,0,4,true,2,true);
+    }
+    protected void draw() {
+
+    }
+
+    protected void prepare() {
+
+    }
+
+    protected void aim() {
+
+    }
+
+    protected void strike() {
+
+    }
+
+    protected void holster() {
+
+    }
+}
Index: src/main/java/equipment/weapon/RangeWeapon.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/equipment/weapon/RangeWeapon.java b/src/main/java/equipment/weapon/RangeWeapon.java
new file mode 100644
--- /dev/null	(date 1677232195413)
+++ b/src/main/java/equipment/weapon/RangeWeapon.java	(date 1677232195413)
@@ -0,0 +1,46 @@
+package equipment.weapon;
+
+import util.Attribute;
+
+public class RangeWeapon extends Weapon {
+
+    private int ammo;
+
+    public RangeWeapon(Attribute attribute, float price, float weigth, int requiredStrength, int damage, boolean multiAttackAllowed, float range, boolean isThrowable) {
+        super(attribute,  price,  weigth, requiredStrength, damage, multiAttackAllowed,range, isThrowable);
+
+    }
+
+    public int getAmmo() {
+        return ammo;
+    }
+
+    public void setAmmo(int ammo) {
+        this.ammo = ammo;
+    }
+
+    @Override
+    protected void draw() {
+
+    }
+
+    @Override
+    protected void prepare() {
+
+    }
+
+    @Override
+    protected void aim() {
+
+    }
+
+    @Override
+    protected void strike() {
+
+    }
+
+    @Override
+    protected void holster() {
+
+    }
+}
Index: src/main/java/equipment/weapon/Weapon.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/equipment/weapon/Weapon.java b/src/main/java/equipment/weapon/Weapon.java
new file mode 100644
--- /dev/null	(date 1677232195445)
+++ b/src/main/java/equipment/weapon/Weapon.java	(date 1677232195445)
@@ -0,0 +1,56 @@
+package equipment.weapon;
+
+import equipment.Equipment;
+import util.Attribute;
+
+public abstract class Weapon extends Equipment {
+
+    private final int  damage;
+    private final boolean  multiAttackAllowed;
+    private final float  range;
+    private final boolean  isThrowable;
+
+    public Weapon(Attribute attribute, float price, float weigth,int requiredStrength,  int damage, boolean multiAttackAllowed, float range, boolean isThrowable) {
+        super(attribute,  price,  weigth, requiredStrength);
+        this.damage = damage;
+        this.multiAttackAllowed = multiAttackAllowed;
+        this.range = range;
+        this.isThrowable = isThrowable;
+    }
+
+    public int getDamage() {
+        return damage;
+    }
+
+    public boolean isMultiAttackAllowed() {
+        return multiAttackAllowed;
+    }
+
+    public float getRange() {
+        return range;
+    }
+
+    public boolean isThrowable() {
+        return isThrowable;
+    }
+
+
+    public void useWeapon() {
+         draw();
+         prepare();
+         aim();
+         strike();
+         holster();
+    }
+
+     protected  abstract void draw();
+
+     protected  abstract void prepare();
+
+     protected  abstract void aim();
+
+     protected  abstract void strike();
+
+     protected  abstract void holster();
+
+}
Index: src/main/java/equipment/armor/ChainMail.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/equipment/armor/ChainMail.java b/src/main/java/equipment/armor/ChainMail.java
new file mode 100644
--- /dev/null	(date 1677232195302)
+++ b/src/main/java/equipment/armor/ChainMail.java	(date 1677232195302)
@@ -0,0 +1,9 @@
+package equipment.armor;
+
+import util.Attribute;
+
+public class ChainMail  extends Armor{
+    public ChainMail(Attribute attribute, float price, float weigth, int requiredStrength, int armorClass, String drawback) {
+        super(Attribute.NOATTRIBUTE, 75, 55, 13, 6, "Stealth");
+    }
+}
Index: src/main/java/equipment/armor/ScaleArmor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/equipment/armor/ScaleArmor.java b/src/main/java/equipment/armor/ScaleArmor.java
new file mode 100644
--- /dev/null	(date 1677232195335)
+++ b/src/main/java/equipment/armor/ScaleArmor.java	(date 1677232195335)
@@ -0,0 +1,9 @@
+package equipment.armor;
+
+import util.Attribute;
+
+public class ScaleArmor extends Armor{
+    public ScaleArmor(Attribute attribute, float price, float weigth, int requiredStrength, int armorClass, String drawback) {
+        super(Attribute.DEXTERITY, 50, 45, 0, armorClass, "no");
+    }
+}
Index: src/main/java/equipment/armor/LeatherArmor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/equipment/armor/LeatherArmor.java b/src/main/java/equipment/armor/LeatherArmor.java
new file mode 100644
--- /dev/null	(date 1677232195316)
+++ b/src/main/java/equipment/armor/LeatherArmor.java	(date 1677232195316)
@@ -0,0 +1,11 @@
+package equipment.armor;
+
+import util.Attribute;
+
+public class LeatherArmor extends Armor{
+
+
+    public LeatherArmor(Attribute attribute, float price, float weigth, int requiredStrength, int armorClass, String drawback) {
+        super(Attribute.DEXTERITY, 10, 10, 0, 1, "");
+    }
+}
Index: src/main/java/equipment/armor/Shield.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/equipment/armor/Shield.java b/src/main/java/equipment/armor/Shield.java
new file mode 100644
--- /dev/null	(date 1677232195349)
+++ b/src/main/java/equipment/armor/Shield.java	(date 1677232195349)
@@ -0,0 +1,9 @@
+package equipment.armor;
+
+import util.Attribute;
+
+public class Shield extends Armor {
+    public Shield(Attribute attribute, float price, float weigth, int requiredStrength, int armorClass, String drawback) {
+        super(Attribute.NOATTRIBUTE, 0, 6, 0, 2, "no");
+    }
+}
Index: src/main/java/equipment/armor/Armor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/equipment/armor/Armor.java b/src/main/java/equipment/armor/Armor.java
new file mode 100644
--- /dev/null	(date 1677232195287)
+++ b/src/main/java/equipment/armor/Armor.java	(date 1677232195287)
@@ -0,0 +1,30 @@
+package equipment.armor;
+
+import equipment.Equipment;
+import util.Attribute;
+
+public abstract class Armor extends Equipment {
+
+    private final int armorClass;
+    private String drawback;
+
+    public Armor(Attribute attribute, float price, float weigth, int requiredStrength, int armorClass, String drawback) {
+        super(attribute, price, weigth, requiredStrength);
+        this.armorClass = armorClass;
+        this.setDrawback(drawback);
+    }
+
+    public int getArmorClass() {
+        return armorClass;
+    }
+
+    public String getDrawback() {
+        return drawback;
+    }
+
+    public void setDrawback(String drawback) {
+        this.drawback = drawback;
+    }
+
+
+}
Index: src/main/java/equipment/armor/NoArmor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/equipment/armor/NoArmor.java b/src/main/java/equipment/armor/NoArmor.java
new file mode 100644
--- /dev/null	(date 1677232195330)
+++ b/src/main/java/equipment/armor/NoArmor.java	(date 1677232195330)
@@ -0,0 +1,9 @@
+package equipment.armor;
+
+import util.Attribute;
+
+public class NoArmor extends Armor{
+    public NoArmor(Attribute attribute, float price, float weigth, int requiredStrength, int armorClass, String drawback) {
+        super(Attribute.NOATTRIBUTE, 0, 0, 0, 0, "no");
+    }
+}
Index: src/main/java/battlemap/Meta/TileType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/Meta/TileType.java b/src/main/java/battlemap/Meta/TileType.java
new file mode 100644
--- /dev/null	(date 1677232195158)
+++ b/src/main/java/battlemap/Meta/TileType.java	(date 1677232195158)
@@ -0,0 +1,3 @@
+package battlemap.Meta;
+
+public enum TileType {WALL, DOOR, FLOOR, MONSTER, PLAYER, ARMOR, WEAPON, POTION, MAGICAL, CHEST}
\ No newline at end of file
Index: src/main/java/battlemap/Dungeon/Dungeon.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/Dungeon/Dungeon.java b/src/main/java/battlemap/Dungeon/Dungeon.java
new file mode 100644
--- /dev/null	(date 1677232195083)
+++ b/src/main/java/battlemap/Dungeon/Dungeon.java	(date 1677232195083)
@@ -0,0 +1,196 @@
+package battlemap.Dungeon;
+
+import Artifact.Artifact;
+import battlemap.AbstractPositions.ArtifactPos;
+import battlemap.AbstractPositions.CharacterPos;
+import battlemap.AbstractPositions.EquipmentPos;
+import battlemap.AbstractPositions.TilePos;
+import battlemap.Meta.TileType;
+import battlemap.Positions.*;
+import equipment.Equipment;
+
+public class Dungeon
+{
+    private TilePos[][] tiles;
+    private CharacterPos[][] characters;
+    private EquipmentPos[][] equipment;
+    private ArtifactPos[][] artifacts;
+    private String name;
+
+    public Dungeon(int xMax, int yMax, String name)
+    {
+        if(name.isBlank())
+        {
+            this.name = "Dungeon of Dragons";
+        }
+        else
+        {
+            this.name = name;
+        }
+
+
+        if(xMax>10 && yMax>10)
+        {
+            tiles = new TilePos[xMax][yMax];
+            characters = new CharacterPos[xMax][yMax];
+            equipment = new EquipmentPos[xMax][yMax];
+            artifacts = new ArtifactPos[xMax][yMax];
+        }
+        else
+        {
+            tiles = new TilePos[10][10];
+            characters = new CharacterPos[10][10];
+            equipment = new EquipmentPos[10][10];
+            artifacts = new ArtifactPos[10][10];
+        }
+    }
+
+    public void transferTilePos(int x, int y, TilePos tile)
+    {
+        tiles[x][y] = tile;
+    }
+
+    public void setDoorPos(int x, int y, TileType type, int difficultyClass, boolean isSecret)
+    {
+        switch(type)
+        {
+            case DOOR:
+                tiles[x][y] = new DoorPos(x,y,difficultyClass, isSecret);
+                break;
+            default:
+                tiles[x][y] = null;
+                break;
+        }
+    }
+
+    public void setChestPos(int x, int y, TileType type, int difficultyClass, boolean isSecret, Equipment eqLoot, Artifact artLoot)
+    {
+        switch(type)
+        {
+            case CHEST:
+                tiles[x][y] = new ChestPos(x,y,difficultyClass,isSecret, eqLoot, artLoot);
+                break;
+            default:
+                tiles[x][y] = null;
+                break;
+        }
+    }
+
+    public void setStructurePos(int x, int y, TileType type)
+    {
+        switch(type)
+        {
+            case WALL:
+                tiles[x][y] = new WallPos(x,y);
+                break;
+            default:
+                tiles[x][y] = null;
+                break;
+        }
+    }
+
+    public TilePos getTilePos(int x, int y)
+    {
+        try
+        {
+            return tiles[x][y];
+        }
+        catch (ArrayIndexOutOfBoundsException e)
+        {
+            return null;
+        }
+    }
+
+    public void transferCharacterPos(int x, int y, CharacterPos character)
+    {
+        characters[x][y] = character;
+    }
+
+    public void setCharacterPos(int x, int y, TileType type, AbstractCharacter character)
+    {
+        switch(type)
+        {
+            case PLAYER:
+                characters[x][y] = new PlayerPos(x,y,character);
+                break;
+            case MONSTER:
+                characters[x][y] = new MonsterPos(x,y,character);
+                break;
+            default:
+                characters[x][y] = null;
+                break;
+        }
+    }
+    public CharacterPos getCharacterPos(int x, int y)
+    {
+        try
+        {
+            return characters[x][y];
+        }
+        catch (ArrayIndexOutOfBoundsException e)
+        {
+            return null;
+        }
+    }
+
+    public void setEquipmentPos(int x, int y, TileType type, Equipment equipment)
+    {
+        switch(type)
+        {
+            case ARMOR:
+                this.equipment[x][y] = new ArmorPos(x,y,equipment);
+                break;
+            case WEAPON:
+                this.equipment[x][y] = new WeaponPos(x,y,equipment);
+                break;
+            default:
+                this.equipment[x][y] = null;
+                break;
+        }
+    }
+
+    public EquipmentPos getEquipmentPos(int x, int y)
+    {
+        try
+        {
+            return equipment[x][y];
+        }
+        catch (ArrayIndexOutOfBoundsException e)
+        {
+            return null;
+        }
+    }
+
+    public void setArtifactPos(int x, int y, TileType type, Artifact artifact)
+    {
+        switch(type)
+        {
+            case MAGICAL:
+                artifacts[x][y] = new MagicalPos(x,y,artifact);
+                break;
+            case POTION:
+                artifacts[x][y] = new PotionPos(x,y,artifact);
+                break;
+            default:
+                artifacts[x][y] = null;
+                break;
+        }
+    }
+
+    public ArtifactPos getArtifactPos(int x, int y)
+    {
+        try
+        {
+            return artifacts[x][y];
+        }
+        catch (ArrayIndexOutOfBoundsException e)
+        {
+            return null;
+        }
+    }
+
+    public String getName()
+    {
+        return name;
+    }
+}
Index: src/main/java/battlemap/Meta/MetaData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/Meta/MetaData.java b/src/main/java/battlemap/Meta/MetaData.java
new file mode 100644
--- /dev/null	(date 1677232195152)
+++ b/src/main/java/battlemap/Meta/MetaData.java	(date 1677232195152)
@@ -0,0 +1,69 @@
+package battlemap.Meta;
+
+public class MetaData
+{
+    private boolean isPassable;
+    private boolean isVisible;
+    private TileType tileType;
+    private int posX;
+    private int posY;
+
+    public MetaData(int posX, int posY, TileType tileType, boolean isPassable, boolean isVisible)
+    {
+        this.posX = posX;
+        this.posY = posY;
+        this.tileType = tileType;
+        this.isPassable = isPassable;
+        this.isVisible = isVisible;
+    }
+
+    public int getPosX()
+    {
+        return posX;
+    }
+
+    public void setPosX(int posX)
+    {
+        this.posX = posX;
+    }
+
+    public int getPosY()
+    {
+        return posY;
+    }
+
+    public void setPosY(int posY)
+    {
+        this.posY = posY;
+    }
+
+    public TileType getTileType()
+    {
+        return tileType;
+    }
+
+    public void setTileType(TileType tileType)
+    {
+        this.tileType = tileType;
+    }
+
+    public boolean isPassable()
+    {
+        return isPassable;
+    }
+
+    public void setPassable(boolean passable)
+    {
+        isPassable = passable;
+    }
+
+    public boolean isVisible()
+    {
+        return isVisible;
+    }
+
+    public void setVisible(boolean visible)
+    {
+        isVisible = visible;
+    }
+}
Index: src/main/java/battlemap/Lockables/Door.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/Lockables/Door.java b/src/main/java/battlemap/Lockables/Door.java
new file mode 100644
--- /dev/null	(date 1677232195119)
+++ b/src/main/java/battlemap/Lockables/Door.java	(date 1677232195119)
@@ -0,0 +1,9 @@
+package battlemap.Lockables;
+
+public class Door extends Lockable
+{
+
+    public Door(boolean isSecret, int difficultyClass) {
+        super(isSecret, difficultyClass);
+    }
+}
Index: src/main/java/battlemap/Lockables/Lockable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/Lockables/Lockable.java b/src/main/java/battlemap/Lockables/Lockable.java
new file mode 100644
--- /dev/null	(date 1677232195134)
+++ b/src/main/java/battlemap/Lockables/Lockable.java	(date 1677232195134)
@@ -0,0 +1,47 @@
+package battlemap.Lockables;
+
+import Artifact.Artifact;
+
+public abstract class Lockable
+{
+    protected boolean isSecret;
+    protected boolean isLocked;
+    protected int difficultyClass;
+
+    public Lockable(boolean isSecret, int difficultyClass)
+    {
+        this.isSecret = isSecret;
+        this.difficultyClass = difficultyClass;
+    }
+
+    public void unlock(int roll)
+    {
+        if(roll >= difficultyClass)
+        {
+            isLocked = false;
+        }
+    }
+
+    public void reveal(int roll)
+    {
+        if(roll > difficultyClass)
+        {
+            isSecret = false;
+        }
+    }
+
+    public int getDifficultyClass()
+    {
+        return difficultyClass;
+    }
+
+    public boolean isLocked()
+    {
+        return isLocked;
+    }
+
+    public boolean isSecret()
+    {
+        return isSecret;
+    }
+}
Index: src/main/java/battlemap/Positions/MagicalPos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/Positions/MagicalPos.java b/src/main/java/battlemap/Positions/MagicalPos.java
new file mode 100644
--- /dev/null	(date 1677232195217)
+++ b/src/main/java/battlemap/Positions/MagicalPos.java	(date 1677232195217)
@@ -0,0 +1,13 @@
+package battlemap.Positions;
+
+import Artifact.Artifact;
+import battlemap.AbstractPositions.ArtifactPos;
+import battlemap.Meta.TileType;
+
+public class MagicalPos extends ArtifactPos
+{
+    public MagicalPos(int posX, int posY, Artifact artifact)
+    {
+        super(posX, posY, TileType.MAGICAL, true, false, artifact);
+    }
+}
Index: src/main/java/battlemap/Lockables/Chest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/Lockables/Chest.java b/src/main/java/battlemap/Lockables/Chest.java
new file mode 100644
--- /dev/null	(date 1677232195103)
+++ b/src/main/java/battlemap/Lockables/Chest.java	(date 1677232195103)
@@ -0,0 +1,10 @@
+package battlemap.Lockables;
+
+public class Chest extends Lockable
+{
+
+    public Chest(boolean isSecret, int difficultyClass) {
+        super(isSecret, difficultyClass);
+    }
+
+}
Index: src/main/java/battlemap/Positions/ChestPos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/Positions/ChestPos.java b/src/main/java/battlemap/Positions/ChestPos.java
new file mode 100644
--- /dev/null	(date 1677232195190)
+++ b/src/main/java/battlemap/Positions/ChestPos.java	(date 1677232195190)
@@ -0,0 +1,40 @@
+package battlemap.Positions;
+
+import Artifact.Artifact;
+import battlemap.AbstractPositions.TilePos;
+import battlemap.Lockables.Chest;
+import battlemap.Meta.TileType;
+import equipment.Equipment;
+
+public class ChestPos extends TilePos
+{
+    private Equipment equipmentLoot;
+    private Artifact artifactLoot;
+    public ChestPos(int posX, int posY, int difficultyClass, boolean isSecret, Equipment equipmentLoot, Artifact artifactLoot)
+    {
+        super(posX, posY, TileType.CHEST, false, false);
+        lock = new Chest(isSecret, difficultyClass);
+        this.artifactLoot = artifactLoot;
+        this.equipmentLoot = equipmentLoot;
+    }
+
+    public Artifact getArtifactLoot()
+    {
+        return artifactLoot;
+    }
+
+    public void setArtifactLoot(Artifact artifactLoot)
+    {
+        this.artifactLoot = artifactLoot;
+    }
+
+    public Equipment getEquipmentLoot()
+    {
+        return equipmentLoot;
+    }
+
+    public void setEquipmentLoot(Equipment equipmentLoot)
+    {
+        this.equipmentLoot = equipmentLoot;
+    }
+}
Index: src/main/java/battlemap/Positions/WeaponPos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/Positions/WeaponPos.java b/src/main/java/battlemap/Positions/WeaponPos.java
new file mode 100644
--- /dev/null	(date 1677232195265)
+++ b/src/main/java/battlemap/Positions/WeaponPos.java	(date 1677232195265)
@@ -0,0 +1,13 @@
+package battlemap.Positions;
+
+import battlemap.AbstractPositions.EquipmentPos;
+import battlemap.Meta.TileType;
+import equipment.Equipment;
+
+public class WeaponPos extends EquipmentPos
+{
+    public WeaponPos(int posX, int posY, Equipment equipment)
+    {
+        super(posX, posY, TileType.WEAPON, true, false, equipment);
+    }
+}
Index: src/main/java/battlemap/Positions/ArmorPos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/Positions/ArmorPos.java b/src/main/java/battlemap/Positions/ArmorPos.java
new file mode 100644
--- /dev/null	(date 1677232195174)
+++ b/src/main/java/battlemap/Positions/ArmorPos.java	(date 1677232195174)
@@ -0,0 +1,13 @@
+package battlemap.Positions;
+
+import battlemap.AbstractPositions.EquipmentPos;
+import battlemap.Meta.TileType;
+import equipment.Equipment;
+
+public class ArmorPos extends EquipmentPos
+{
+    public ArmorPos(int posX, int posY, Equipment equipment)
+    {
+        super(posX, posY, TileType.ARMOR, true, false, equipment);
+    }
+}
Index: src/main/java/battlemap/Positions/WallPos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/Positions/WallPos.java b/src/main/java/battlemap/Positions/WallPos.java
new file mode 100644
--- /dev/null	(date 1677232195254)
+++ b/src/main/java/battlemap/Positions/WallPos.java	(date 1677232195254)
@@ -0,0 +1,12 @@
+package battlemap.Positions;
+
+import battlemap.AbstractPositions.TilePos;
+import battlemap.Meta.TileType;
+
+public class WallPos extends TilePos
+{
+    public WallPos(int posX, int posY)
+    {
+        super(posX, posY, TileType.WALL, false, false);
+    }
+}
Index: src/main/java/battlemap/Positions/DoorPos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/Positions/DoorPos.java b/src/main/java/battlemap/Positions/DoorPos.java
new file mode 100644
--- /dev/null	(date 1677232195212)
+++ b/src/main/java/battlemap/Positions/DoorPos.java	(date 1677232195212)
@@ -0,0 +1,15 @@
+package battlemap.Positions;
+
+import battlemap.AbstractPositions.TilePos;
+import battlemap.Lockables.Door;
+import battlemap.Lockables.Lockable;
+import battlemap.Meta.TileType;
+
+public class DoorPos extends TilePos
+{
+    public DoorPos(int posX, int posY, int difficultyClass, boolean isSecret)
+    {
+        super(posX, posY, TileType.DOOR, false, false);
+        lock = new Door(isSecret, difficultyClass);
+    }
+}
Index: src/main/java/battlemap/Positions/PotionPos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/Positions/PotionPos.java b/src/main/java/battlemap/Positions/PotionPos.java
new file mode 100644
--- /dev/null	(date 1677232195244)
+++ b/src/main/java/battlemap/Positions/PotionPos.java	(date 1677232195244)
@@ -0,0 +1,13 @@
+package battlemap.Positions;
+
+import Artifact.Artifact;
+import battlemap.AbstractPositions.ArtifactPos;
+import battlemap.Meta.TileType;
+
+public class PotionPos extends ArtifactPos
+{
+    public PotionPos(int posX, int posY, Artifact artifact)
+    {
+        super(posX, posY, TileType.POTION, true, false, artifact);
+    }
+}
Index: src/main/java/battlemap/Positions/PlayerPos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/Positions/PlayerPos.java b/src/main/java/battlemap/Positions/PlayerPos.java
new file mode 100644
--- /dev/null	(date 1677232195233)
+++ b/src/main/java/battlemap/Positions/PlayerPos.java	(date 1677232195233)
@@ -0,0 +1,12 @@
+package battlemap.Positions;
+
+import battlemap.AbstractPositions.CharacterPos;
+import battlemap.Meta.TileType;
+
+public class PlayerPos extends CharacterPos
+{
+    public PlayerPos(int posX, int posY, AbstractCharacter character)
+    {
+        super(posX, posY, TileType.PLAYER, false, true, character);
+    }
+}
Index: src/main/java/battlemap/Positions/MonsterPos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/Positions/MonsterPos.java b/src/main/java/battlemap/Positions/MonsterPos.java
new file mode 100644
--- /dev/null	(date 1677232195220)
+++ b/src/main/java/battlemap/Positions/MonsterPos.java	(date 1677232195220)
@@ -0,0 +1,12 @@
+package battlemap.Positions;
+
+import battlemap.AbstractPositions.CharacterPos;
+import battlemap.Meta.TileType;
+
+public class MonsterPos extends CharacterPos
+{
+    public MonsterPos(int posX, int posY, AbstractCharacter character)
+    {
+        super(posX, posY, TileType.MONSTER, false, false, character);
+    }
+}
Index: src/main/java/battlemap/AbstractPositions/EquipmentPos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/AbstractPositions/EquipmentPos.java b/src/main/java/battlemap/AbstractPositions/EquipmentPos.java
new file mode 100644
--- /dev/null	(date 1677232195060)
+++ b/src/main/java/battlemap/AbstractPositions/EquipmentPos.java	(date 1677232195060)
@@ -0,0 +1,37 @@
+package battlemap.AbstractPositions;
+
+import battlemap.Meta.MetaData;
+import battlemap.Meta.TileType;
+import equipment.Equipment;
+
+public abstract class EquipmentPos
+{
+    protected MetaData metaData;
+    protected Equipment equipment;
+
+    public EquipmentPos(int posX, int posY, TileType tileType, boolean isPassable, boolean isVisible, Equipment equipment)
+    {
+        metaData = new MetaData(posX,posY,tileType,isPassable,isVisible);
+        this.equipment = equipment;
+    }
+
+    public MetaData getMetaData()
+    {
+        return metaData;
+    }
+
+    public void setMetaData(MetaData metaData)
+    {
+        this.metaData = metaData;
+    }
+
+    public Equipment getEquipment()
+    {
+        return equipment;
+    }
+
+    public void setEquipment(Equipment equipment)
+    {
+        this.equipment = equipment;
+    }
+}
Index: src/main/java/battlemap/AbstractPositions/CharacterPos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/AbstractPositions/CharacterPos.java b/src/main/java/battlemap/AbstractPositions/CharacterPos.java
new file mode 100644
--- /dev/null	(date 1677232195045)
+++ b/src/main/java/battlemap/AbstractPositions/CharacterPos.java	(date 1677232195045)
@@ -0,0 +1,36 @@
+package battlemap.AbstractPositions;
+
+import battlemap.Meta.MetaData;
+import battlemap.Meta.TileType;
+
+public abstract class CharacterPos
+{
+    protected MetaData metaData;
+    protected AbstractCharacter character;
+
+    public CharacterPos(int posX, int posY, TileType tileType, boolean isPassable, boolean isVisible, AbstractCharacter character)
+    {
+        metaData = new MetaData(posX,posY,tileType,isPassable,isVisible);
+        this.character = character;
+    }
+
+    public MetaData getMetaData()
+    {
+        return metaData;
+    }
+
+    public void setMetaData(MetaData metaData)
+    {
+        this.metaData = metaData;
+    }
+
+    public AbstractCharacter getCharacter()
+    {
+        return character;
+    }
+
+    public void setCharacter(AbstractCharacter character)
+    {
+        this.character = character;
+    }
+}
Index: src/main/java/battlemap/AbstractPositions/ArtifactPos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/AbstractPositions/ArtifactPos.java b/src/main/java/battlemap/AbstractPositions/ArtifactPos.java
new file mode 100644
--- /dev/null	(date 1677232195041)
+++ b/src/main/java/battlemap/AbstractPositions/ArtifactPos.java	(date 1677232195041)
@@ -0,0 +1,37 @@
+package battlemap.AbstractPositions;
+
+import Artifact.Artifact;
+import battlemap.Meta.MetaData;
+import battlemap.Meta.TileType;
+
+public abstract class ArtifactPos
+{
+    protected MetaData metaData;
+    protected Artifact artifact;
+
+    public ArtifactPos(int posX, int posY, TileType tileType, boolean isPassable, boolean isVisible, Artifact artifact)
+    {
+        metaData = new MetaData(posX,posY,tileType,isPassable,isVisible);
+        this.artifact = artifact;
+    }
+
+    public MetaData getMetaData()
+    {
+        return metaData;
+    }
+
+    public void setMetaData(MetaData metaData)
+    {
+        this.metaData = metaData;
+    }
+
+    public Artifact getArtifact()
+    {
+        return artifact;
+    }
+
+    public void setArtifact(Artifact artifact)
+    {
+        this.artifact = artifact;
+    }
+}
Index: src/main/java/battlemap/AbstractPositions/TilePos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/battlemap/AbstractPositions/TilePos.java b/src/main/java/battlemap/AbstractPositions/TilePos.java
new file mode 100644
--- /dev/null	(date 1677232195066)
+++ b/src/main/java/battlemap/AbstractPositions/TilePos.java	(date 1677232195066)
@@ -0,0 +1,59 @@
+package battlemap.AbstractPositions;
+
+import battlemap.Lockables.Lockable;
+import battlemap.Meta.MetaData;
+import battlemap.Meta.TileType;
+import equipment.Equipment;
+
+public abstract class TilePos
+{
+    protected MetaData metaData;
+    protected Lockable lock;
+
+    public TilePos(int posX, int posY, TileType tileType, boolean isPassable, boolean isVisible)
+    {
+        metaData = new MetaData(posX,posY,tileType,isPassable,isVisible);
+    }
+
+    public MetaData getMetaData()
+    {
+        return metaData;
+    }
+
+    public void setMetaData(MetaData metaData)
+    {
+        this.metaData = metaData;
+    }
+
+    public Lockable getLockable()
+    {
+        return lock;
+    }
+
+    public void setLockable(Lockable lock)
+    {
+        this.lock = lock;
+    }
+
+    public void open()
+    {
+        if(!lock.equals(null))
+        {
+            if(!lock.isLocked())
+            {
+                metaData.setPassable(true);
+            }
+        }
+    }
+
+    public void close()
+    {
+        if(!lock.equals(null))
+        {
+            if(!lock.isLocked())
+            {
+                metaData.setPassable(false);
+            }
+        }
+    }
+}
Index: Klassendiagramme/Charakter/.$Charakter.drawio.bkp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Klassendiagramme/Charakter/.$Charakter.drawio.bkp b/Klassendiagramme/Charakter/.$Charakter.drawio.bkp
new file mode 100644
--- /dev/null	(date 1677232194923)
+++ b/Klassendiagramme/Charakter/.$Charakter.drawio.bkp	(date 1677232194923)
@@ -0,0 +1,1 @@
+<mxfile host="Electron" modified="2023-02-03T10:20:55.478Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.2.3 Chrome/102.0.5005.167 Electron/19.0.11 Safari/537.36" etag="jY4Ju6ZoyuNk4nCyX6IC" version="20.2.3" type="device"><diagram id="C5RBs43oDa-KdzZeNtuy" name="Page-1">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</diagram></mxfile>
\ No newline at end of file
Index: Klassendiagramme/GameController/GameController.drawio
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><mxfile host=\"Electron\" modified=\"2023-02-03T10:18:00.073Z\" agent=\"5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.2.3 Chrome/102.0.5005.167 Electron/19.0.11 Safari/537.36\" etag=\"H7CwhIhY65gJ8O1gwCeo\" version=\"20.2.3\" type=\"device\"><diagram id=\"C5RBs43oDa-KdzZeNtuy\" name=\"Page-1\">7VZtb5swEP41SNukTgGSNP1YSJe1TaZs6ZZtXyYXHLBqfNQ4L/TX7wwmhNB0abVqXyYhwT13Pnz3PIexXD/ZjCRJ4wmElFtOJ9xY7tByHNvuOHjTSF4iA7dXApFkoQmqgRl7oAbsGHTJQpo1AhUAVyxtggEIQQPVwIiUsG6GLYA335qSiLaAWUB4G52zUMWmCue0xj9SFsXVm+3+WelJSBVsKsliEsJ6B3IvLNeXAKp8SjY+5bp5VV/ml/mcj+/6o6vP2T356l3ffPp2Uib78Jwl2xIkFerFqUf8fnL5Y7Ea5vLXd3btXCn6s0q9Inxp+jUiCfVBKAmcU2k5fctxkUvXM01QedXZbM0STgRa3gIXzIzHRptwFgl8DnDDmMT1VlQqhqScG4eCFNEgZjwckxyWuqxMkeCusrwYJHvAtISbnOiWyugLd7UbMdMrEdbblDTDmGnVK3sPmpBNI3BMMmWAACsmacZut2UkREZMeKAUJCbI9AvLoZs9gf2BHXsrGZw1CglVMsd1JotzZlRmxszpGXtdi9buGyzeFezAgMQMSrTNXYsBH4wenqENp6WNlJOcSnzP+Tt0TAtrRyEJiKygu3BPjLUvG2ycKuiUcIdK44ALhgJKHTHO96BKSpwu1EEhZSkJmIjGRcywWyNfTKM0BLh2wYsJjlkYUqFFAIooUjKuS0iBCVU0sufhha31O+97Vg837qNt1zZeOlwqX9cpCSvIpyinNdWSOk4ph4eyrZRKGf3jhNHtvpIu3JYuWhxzVnBXclx9du0XEZwgVZzWjN5owocndot1t826+wjDnNxSPoWMKQY6vyxj95j/V+SeHjn1g1fitvsIt54+xfFUmOkP8Ju3ON6NU6FyX4jwcadaSvGk84nEC13yYf//T8vfVd/gyDOn+il8hv7QrH+VCt/OD6d78Rs=</diagram></mxfile>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Klassendiagramme/GameController/GameController.drawio b/Klassendiagramme/GameController/GameController.drawio
--- a/Klassendiagramme/GameController/GameController.drawio	(revision c4eb6f28dd3096d424b547ebe2a15e71298e3b62)
+++ b/Klassendiagramme/GameController/GameController.drawio	(date 1677232194964)
@@ -1,1 +1,1 @@
-<mxfile host="Electron" modified="2023-02-03T10:18:00.073Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.2.3 Chrome/102.0.5005.167 Electron/19.0.11 Safari/537.36" etag="H7CwhIhY65gJ8O1gwCeo" version="20.2.3" type="device"><diagram id="C5RBs43oDa-KdzZeNtuy" name="Page-1">7VZtb5swEP41SNukTgGSNP1YSJe1TaZs6ZZtXyYXHLBqfNQ4L/TX7wwmhNB0abVqXyYhwT13Pnz3PIexXD/ZjCRJ4wmElFtOJ9xY7tByHNvuOHjTSF4iA7dXApFkoQmqgRl7oAbsGHTJQpo1AhUAVyxtggEIQQPVwIiUsG6GLYA335qSiLaAWUB4G52zUMWmCue0xj9SFsXVm+3+WelJSBVsKsliEsJ6B3IvLNeXAKp8SjY+5bp5VV/ml/mcj+/6o6vP2T356l3ffPp2Uib78Jwl2xIkFerFqUf8fnL5Y7Ea5vLXd3btXCn6s0q9Inxp+jUiCfVBKAmcU2k5fctxkUvXM01QedXZbM0STgRa3gIXzIzHRptwFgl8DnDDmMT1VlQqhqScG4eCFNEgZjwckxyWuqxMkeCusrwYJHvAtISbnOiWyugLd7UbMdMrEdbblDTDmGnVK3sPmpBNI3BMMmWAACsmacZut2UkREZMeKAUJCbI9AvLoZs9gf2BHXsrGZw1CglVMsd1JotzZlRmxszpGXtdi9buGyzeFezAgMQMSrTNXYsBH4wenqENp6WNlJOcSnzP+Tt0TAtrRyEJiKygu3BPjLUvG2ycKuiUcIdK44ALhgJKHTHO96BKSpwu1EEhZSkJmIjGRcywWyNfTKM0BLh2wYsJjlkYUqFFAIooUjKuS0iBCVU0sufhha31O+97Vg837qNt1zZeOlwqX9cpCSvIpyinNdWSOk4ph4eyrZRKGf3jhNHtvpIu3JYuWhxzVnBXclx9du0XEZwgVZzWjN5owocndot1t826+wjDnNxSPoWMKQY6vyxj95j/V+SeHjn1g1fitvsIt54+xfFUmOkP8Ju3ON6NU6FyX4jwcadaSvGk84nEC13yYf//T8vfVd/gyDOn+il8hv7QrH+VCt/OD6d78Rs=</diagram></mxfile>
\ No newline at end of file
+<mxfile host="Electron" modified="2023-02-24T08:21:31.274Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.2.3 Chrome/102.0.5005.167 Electron/19.0.11 Safari/537.36" etag="ciNndIzPP6GJIwCv1r6n" version="20.2.3" type="device"><diagram id="C5RBs43oDa-KdzZeNtuy" name="Page-1">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</diagram></mxfile>
\ No newline at end of file
Index: src/main/java/util/Attribute.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/util/Attribute.java b/src/main/java/util/Attribute.java
new file mode 100644
--- /dev/null	(date 1677232195459)
+++ b/src/main/java/util/Attribute.java	(date 1677232195459)
@@ -0,0 +1,12 @@
+package util;
+
+public enum Attribute {
+
+    STRENGTH,
+    DEXTERITY,
+    WISDOM,
+    INTELLIGENCE,
+    CHARISMA,
+    CONSTITUTION,
+    NOATTRIBUTE,
+}
Index: src/main/java/GUI/Test.form
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/GUI/Test.form b/src/main/java/GUI/Test.form
new file mode 100644
--- /dev/null	(date 1677232195013)
+++ b/src/main/java/GUI/Test.form	(date 1677232195013)
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="GUI.Test">
+  <grid id="27dc6" binding="panel1" default-binding="true" layout-manager="GridLayoutManager" row-count="1" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="500" height="400"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <tabbedpane id="1eea" binding="tabbedPane1" default-binding="true">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <preferred-size width="200" height="200"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children>
+          <grid id="6e18" layout-manager="GridLayoutManager" row-count="1" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+            <margin top="0" left="0" bottom="0" right="0"/>
+            <constraints>
+              <tabbedpane title="Untitled"/>
+            </constraints>
+            <properties/>
+            <border type="none"/>
+            <children/>
+          </grid>
+        </children>
+      </tabbedpane>
+      <tabbedpane id="624b3" binding="tabbedPane2" default-binding="true">
+        <constraints>
+          <grid row="0" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <preferred-size width="200" height="200"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children>
+          <grid id="e7cb2" layout-manager="GridLayoutManager" row-count="1" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+            <margin top="0" left="0" bottom="0" right="0"/>
+            <constraints>
+              <tabbedpane title="Untitled"/>
+            </constraints>
+            <properties/>
+            <border type="none"/>
+            <children/>
+          </grid>
+        </children>
+      </tabbedpane>
+    </children>
+  </grid>
+</form>
Index: src/main/java/GUI/Test.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/GUI/Test.java b/src/main/java/GUI/Test.java
new file mode 100644
--- /dev/null	(date 1677232195028)
+++ b/src/main/java/GUI/Test.java	(date 1677232195028)
@@ -0,0 +1,14 @@
+package GUI;
+
+import javax.swing.*;
+
+public class Test {
+
+    private JPanel panel1;
+    private JTabbedPane tabbedPane1;
+    private JTabbedPane tabbedPane2;
+
+    private void createUIComponents() {
+        // TODO: place custom component creation code here
+    }
+}
Index: Klassendiagramme/Charakter/Charakter.drawio
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><mxfile host=\"Electron\" modified=\"2023-02-03T10:20:55.478Z\" agent=\"5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.2.3 Chrome/102.0.5005.167 Electron/19.0.11 Safari/537.36\" etag=\"jY4Ju6ZoyuNk4nCyX6IC\" version=\"20.2.3\" type=\"device\"><diagram id=\"C5RBs43oDa-KdzZeNtuy\" name=\"Page-1\">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</diagram></mxfile>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Klassendiagramme/Charakter/Charakter.drawio b/Klassendiagramme/Charakter/Charakter.drawio
--- a/Klassendiagramme/Charakter/Charakter.drawio	(revision c4eb6f28dd3096d424b547ebe2a15e71298e3b62)
+++ b/Klassendiagramme/Charakter/Charakter.drawio	(date 1677232194929)
@@ -1,1 +1,1 @@
-<mxfile host="Electron" modified="2023-02-03T10:20:55.478Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.2.3 Chrome/102.0.5005.167 Electron/19.0.11 Safari/537.36" etag="jY4Ju6ZoyuNk4nCyX6IC" version="20.2.3" type="device"><diagram id="C5RBs43oDa-KdzZeNtuy" name="Page-1">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</diagram></mxfile>
\ No newline at end of file
+<mxfile host="Electron" modified="2023-02-24T09:13:53.031Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.2.3 Chrome/102.0.5005.167 Electron/19.0.11 Safari/537.36" etag="arASRY8kzN1rLwbjhc43" version="20.2.3" type="device"><diagram id="C5RBs43oDa-KdzZeNtuy" name="Page-1">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</diagram></mxfile>
\ No newline at end of file
Index: src/main/java/equipment/Equipment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package equipment;\r\n\r\npublic abstract class Equipment {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/equipment/Equipment.java b/src/main/java/equipment/Equipment.java
--- a/src/main/java/equipment/Equipment.java	(revision c4eb6f28dd3096d424b547ebe2a15e71298e3b62)
+++ b/src/main/java/equipment/Equipment.java	(date 1677232195271)
@@ -1,4 +1,34 @@
 package equipment;
 
+import util.Attribute;
+
 public abstract class Equipment {
+
+    private final Attribute attribute;
+    private final float price;
+    private final float weigth;
+    private final int requiredStrength;
+
+    public Equipment(Attribute attribute, float price, float weigth, int requiredStrength) {
+        this.attribute = attribute;
+        this.price = price;
+        this.weigth = weigth;
+        this.requiredStrength = requiredStrength;
+    }
+
+    public Attribute getAttribute() {
+        return attribute;
+    }
+
+    public float getPrice() {
+        return price;
+    }
+
+    public float getWeigth() {
+        return weigth;
+    }
+
+    public int getRequiredStrength() {
+        return requiredStrength;
+    }
 }
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision c4eb6f28dd3096d424b547ebe2a15e71298e3b62)
+++ b/.idea/vcs.xml	(date 1677232293119)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"17\" project-jdk-type=\"JavaSDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision c4eb6f28dd3096d424b547ebe2a15e71298e3b62)
+++ b/.idea/misc.xml	(date 1677232258824)
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="MavenProjectsManager">
     <option name="originalFiles">
       <list>
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"SUDProjekt\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n    <bytecodeTargetLevel>\r\n      <module name=\"SUDProjekt\" target=\"17\" />\r\n    </bytecodeTargetLevel>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision c4eb6f28dd3096d424b547ebe2a15e71298e3b62)
+++ b/.idea/compiler.xml	(date 1677232236549)
@@ -7,10 +7,8 @@
         <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
         <outputRelativeToContentRoot value="true" />
         <module name="SUDProjekt" />
+        <module name="HenPaSa_AnWla" />
       </profile>
     </annotationProcessing>
-    <bytecodeTargetLevel>
-      <module name="SUDProjekt" target="17" />
-    </bytecodeTargetLevel>
   </component>
 </project>
\ No newline at end of file
